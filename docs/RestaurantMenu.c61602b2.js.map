{"mappings":"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","sources":["<anon>","src/Components/RestaurantMenu.js"],"sourcesContent":["\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire94c2\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"ldUZY\", function(module, exports) {\n\"use strict\";\nObject.defineProperty(module.exports, \"__esModule\", {\n    value: true\n});\nmodule.exports.default = void 0;\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $aphAM = parcelRequire(\"aphAM\");\n\nvar $f7370693ff5a0295$var$_Shimmer = $f7370693ff5a0295$var$_interopRequireDefault((parcelRequire(\"kbduM\")));\n\nvar $f7370693ff5a0295$var$_RestaurantCategory = $f7370693ff5a0295$var$_interopRequireDefault((parcelRequire(\"6BG0r\")));\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\nfunction $f7370693ff5a0295$var$_interopRequireDefault(e) {\n    return e && e.__esModule ? e : {\n        default: e\n    };\n}\nconst $f7370693ff5a0295$var$RestaurantMenu = ()=>{\n    const [resInfo, setResInfo] = (0, $acw62.useState)(null);\n    const [categories, setCategories] = (0, $acw62.useState)([]);\n    const [showIndex, setShowIndex] = (0, $acw62.useState)(null); // Initially, nothing open\n    const { resid: resid } = (0, $aphAM.useParams)();\n    (0, $acw62.useEffect)(()=>{\n        fetchMenu();\n    }, []);\n    const fetchMenu = async ()=>{\n        // Simulate API call with mock data\n        setTimeout(()=>{\n            const mockRestaurantInfo = {\n                name: \"Mock Restaurant\",\n                cuisines: [\n                    \"Indian\",\n                    \"Chinese\",\n                    \"Continental\"\n                ],\n                costForTwoMessage: \"\\u20B9300 for two\",\n                avgRating: 4.2,\n                totalRatingsString: \"1K+ ratings\"\n            };\n            const mockCategories = [\n                {\n                    card: {\n                        card: {\n                            title: \"Recommended\",\n                            itemCards: [\n                                {\n                                    card: {\n                                        info: {\n                                            id: \"1\",\n                                            name: \"Butter Chicken\",\n                                            description: \"Creamy tomato-based chicken curry\",\n                                            price: 35000,\n                                            imageId: \"bmwn4n4bn6n1tcpc8x2h\"\n                                        }\n                                    }\n                                },\n                                {\n                                    card: {\n                                        info: {\n                                            id: \"2\",\n                                            name: \"Dal Makhani\",\n                                            description: \"Rich black lentils cooked in butter and cream\",\n                                            price: 25000,\n                                            imageId: \"xqwpuhgnsaf18te7zvtv\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                },\n                {\n                    card: {\n                        card: {\n                            title: \"Main Course\",\n                            itemCards: [\n                                {\n                                    card: {\n                                        info: {\n                                            id: \"3\",\n                                            name: \"Chicken Biryani\",\n                                            description: \"Aromatic basmati rice with chicken\",\n                                            defaultPrice: 30000,\n                                            imageId: \"cd832b6167eb9f88aeb1ccdebf38d942\"\n                                        }\n                                    }\n                                },\n                                {\n                                    card: {\n                                        info: {\n                                            id: \"4\",\n                                            name: \"Paneer Tikka\",\n                                            description: \"Grilled cottage cheese\",\n                                            price: 28000,\n                                            imageId: \"un4omn7rcunkmlw6vikr\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                },\n                {\n                    card: {\n                        card: {\n                            title: \"Breads\",\n                            itemCards: [\n                                {\n                                    card: {\n                                        info: {\n                                            id: \"5\",\n                                            name: \"Garlic Naan\",\n                                            description: \"Soft oven-baked bread with garlic\",\n                                            price: 8000,\n                                            imageId: \"mdipoyzfzsa7n7igskht\"\n                                        }\n                                    }\n                                }\n                            ]\n                        }\n                    }\n                }\n            ];\n            setResInfo(mockRestaurantInfo);\n            setCategories(mockCategories);\n        }, 1000);\n    };\n    if (resInfo === null) return /*#__PURE__*/ (0, $ayMG0.jsx)($f7370693ff5a0295$var$_Shimmer.default, {});\n    return /*#__PURE__*/ (0, $ayMG0.jsxs)(\"div\", {\n        className: \"text-center\",\n        children: [\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"h1\", {\n                className: \"font-bold my-6 text-2xl\",\n                children: resInfo?.name\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsxs)(\"p\", {\n                className: \"font-bold text-lg\",\n                children: [\n                    resInfo?.cuisines.join(\", \"),\n                    \" - \",\n                    resInfo?.costForTwoMessage\n                ]\n            }),\n            /*#__PURE__*/ (0, $ayMG0.jsx)(\"div\", {\n                className: \"mt-6\",\n                children: categories.map((category, index)=>/*#__PURE__*/ (0, $ayMG0.jsx)($f7370693ff5a0295$var$_RestaurantCategory.default, {\n                        data: category?.card?.card,\n                        showItems: index === showIndex,\n                        setShowIndex: ()=>setShowIndex(index === showIndex ? null : index) // âœ… toggle open/close\n                    }, category?.card?.card.title))\n            })\n        ]\n    });\n};\nvar $f7370693ff5a0295$var$_default = module.exports.default = $f7370693ff5a0295$var$RestaurantMenu;\n\n});\n\n\n//# sourceMappingURL=RestaurantMenu.c61602b2.js.map\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Shimmer from \"./Shimmer\";\r\nimport RestaurantCategory from \"./RestaurantCategory\";\r\n\r\nconst RestaurantMenu = () => {\r\n  const [resInfo, setResInfo] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [showIndex, setShowIndex] = useState(null); // Initially, nothing open\r\n\r\n  const { resid } = useParams();\r\n\r\n  useEffect(() => {\r\n    fetchMenu();\r\n  }, []);\r\n\r\n  const fetchMenu = async () => {\r\n    // Simulate API call with mock data\r\n    setTimeout(() => {\r\n      const mockRestaurantInfo = {\r\n        name: \"Mock Restaurant\",\r\n        cuisines: [\"Indian\", \"Chinese\", \"Continental\"],\r\n        costForTwoMessage: \"â‚¹300 for two\",\r\n        avgRating: 4.2,\r\n        totalRatingsString: \"1K+ ratings\"\r\n      };\r\n\r\n      const mockCategories = [\r\n        {\r\n          card: {\r\n            card: {\r\n              title: \"Recommended\",\r\n              itemCards: [\r\n                {\r\n                  card: {\r\n                    info: {\r\n                      id: \"1\",\r\n                      name: \"Butter Chicken\",\r\n                      description: \"Creamy tomato-based chicken curry\",\r\n                      price: 35000,\r\n                      imageId: \"bmwn4n4bn6n1tcpc8x2h\"\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  card: {\r\n                    info: {\r\n                      id: \"2\",\r\n                      name: \"Dal Makhani\",\r\n                      description: \"Rich black lentils cooked in butter and cream\",\r\n                      price: 25000,\r\n                      imageId: \"xqwpuhgnsaf18te7zvtv\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          card: {\r\n            card: {\r\n              title: \"Main Course\",\r\n              itemCards: [\r\n                {\r\n                  card: {\r\n                    info: {\r\n                      id: \"3\",\r\n                      name: \"Chicken Biryani\",\r\n                      description: \"Aromatic basmati rice with chicken\",\r\n                      defaultPrice: 30000,\r\n                      imageId: \"cd832b6167eb9f88aeb1ccdebf38d942\"\r\n                    }\r\n                  }\r\n                },\r\n                {\r\n                  card: {\r\n                    info: {\r\n                      id: \"4\",\r\n                      name: \"Paneer Tikka\",\r\n                      description: \"Grilled cottage cheese\",\r\n                      price: 28000,\r\n                      imageId: \"un4omn7rcunkmlw6vikr\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        {\r\n          card: {\r\n            card: {\r\n              title: \"Breads\",\r\n              itemCards: [\r\n                {\r\n                  card: {\r\n                    info: {\r\n                      id: \"5\",\r\n                      name: \"Garlic Naan\",\r\n                      description: \"Soft oven-baked bread with garlic\",\r\n                      price: 8000,\r\n                      imageId: \"mdipoyzfzsa7n7igskht\"\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      ];\r\n\r\n      setResInfo(mockRestaurantInfo);\r\n      setCategories(mockCategories);\r\n    }, 1000);\r\n  };\r\n\r\n  if (resInfo === null) return <Shimmer />;\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1 className=\"font-bold my-6 text-2xl\">{resInfo?.name}</h1>\r\n      <p className=\"font-bold text-lg\">\r\n        {resInfo?.cuisines.join(\", \")} - {resInfo?.costForTwoMessage}\r\n      </p>\r\n\r\n      {/* Categories accordion */}\r\n      <div className=\"mt-6\">\r\n        {categories.map((category, index) => (\r\n          <RestaurantCategory\r\n            key={category?.card?.card.title}\r\n            data={category?.card?.card}\r\n            showItems={index === showIndex}\r\n            setShowIndex={() =>\r\n              setShowIndex(index === showIndex ? null : index)\r\n            } // âœ… toggle open/close\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantMenu;\r\n"],"names":["parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","Object","defineProperty","value","default","$acw62","$aphAM","$f7370693ff5a0295$var$_Shimmer","$f7370693ff5a0295$var$_interopRequireDefault","$f7370693ff5a0295$var$_RestaurantCategory","$ayMG0","e","__esModule","resInfo","setResInfo","useState","categories","setCategories","showIndex","setShowIndex","resid","useParams","useEffect","fetchMenu","setTimeout","mockCategories","card","title","itemCards","info","id","name","description","price","imageId","defaultPrice","cuisines","costForTwoMessage","avgRating","totalRatingsString","jsx","jsxs","className","children","join","map","category","index","data","showItems","_react","require","_reactRouterDom","_Shimmer","_interopRequireDefault","_RestaurantCategory","_jsxRuntime","RestaurantMenu","mockRestaurantInfo","_default"],"version":3,"file":"RestaurantMenu.c61602b2.js.map"}